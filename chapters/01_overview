
-------------------------------------------------
CHAPTER 1 - C++ OVERVIEW
-------------------------------------------------

- C++ Language Basics

    // Comments
    // Single Line Comment
    /* Multi Line Comment */


    // Library Inclusions
    #include "genlib.h"       // User-defined library
    #include <iostream>       // System library
    #include <iomanip>        // System library


    // Constant Declarations
    const int LOWER_LIMIT = 0;
    const int UPPER_LIMIT = 0;


    // Function prototypes must be declared before the function appears in code
    int RaiseIntToPower(int n, int k);


    // Main execution must occur in 'main' method, which returns 0 if successful
    int main() {
        ...
        return 0;
    }


    // Function definitions
    int RaiseIntToPower(int n, int k) {
        ...
        return result;
    }



- Variables

    // In C++, variables are initially undefined.
    int result;

    // If you want variables initialized, must assign explicitly
    int result = 0;



- Naming Conventions

    C++ identifiers:
      1. must start with a letter or underscore
      2. all other characters must be letters, digits, or underscores
      3. cannot use reserved words

    By convention,
      - variable names are camel case and start with a lowercase letter
      - function names are camel case and start with an uppercase letter
      - constants are all uppercase, separated by underscores



- Atomic Types

    // Integers (implementations vary by machine)
    short
    int
    long
    unsigned int
    unsigned long
    unsigned short

    // Floating Point (implementations vary by machine)
    float
    double
    long double

    // Text
    char
    string

    // Boolean
    bool



- C++ Operators (Highest Precedence to Lowest)

    Reference () [] -> .
    Unary - ++ -- ! & * - (type) sizeof
    Math * / % + -
    Shift << >>
    Boolean < <= > >= == !=
    Bitwise & ^ |
    Logical ! && || ?:
    Assignment = op=
    Series ,



- Operation Details

    // Type Casting
    >>> quotient = double(num) / den;
    >>> int(1.99999)
    1


    // Multiple assignment is allowed
    >>> a = b = c = 0;


    // Prefix and Posfix Operators
    // 
    // x++ = calculate value of x, then in(de)crement it.  The value returned to the 
    // x--     surrounging expression is the value before the in(de)crement.
    //
    // ++x = in(de)crements x first, then returns the new value to the surrounding 
    // --x     expression


    // Short-circuit evaluation of boolean expressions is used.



- Statements

    // Simplest statement
    expression;


    // Block
    {
        statement1;
        statement2;
        ...
    }


    // if statement
    if (n % 2 == 0) {
        cout << "The number is even." << endl;
    } else {
        cout << "The number is odd." << endl;
    }


    // switch statement
    // Note that cases must be scalar type
    switch(e) {
        case c1:
            statements;
            break;
        case c2:
            statements;
            break;
        default:
            statements;
            break;
    }


    // Example switch statement
    // Note that month names are scalar because they map to integer constants
    int MonthDays(int month, int year) {
        switch(month) {
            case September:
            case April:
            case June:
            case November:
                return 30;
            case February:
                return (IsLeapYear(year)) ? 29 : 28;
            default:
                return 31;
        }
    }


    // While loop
    while(n > 0){
        n -= 10;
    }


    // Loop and a half
    while(true) {
        ...
        if (value == sentinel) break;
        ...
    }


    // For loop
    for (int i=0; i < n; i++) {
       ...
    }